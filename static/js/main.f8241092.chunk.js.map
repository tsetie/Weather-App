{"version":3,"sources":["components/LocationBar.js","components/TodayInfo.js","components/HourlyForecast.js","components/WeeklyForecast.js","App.js","index.js"],"names":["LocationBar","_ref","handleZipcode","React","createElement","Fragment","Grid","container","justifyContent","spacing","alignItems","item","xs","TextField","onChange","id","label","variant","fullWidth","sx","input","color","InputLabelProps","style","fontWeight","Button","FmdGoodOutlinedIcon","fontSize","Stack","direction","divider","Divider","orientation","flexItem","TodayInfo","zipcode","_useState","useState","_useState2","_slicedToArray","todayWeather","setTodayWeather","getTodayWeather","console","log","fetch","then","res","json","data","catch","err","message","useEffect","Box","display","Object","values","length","p","Typography","textAlign","Math","round","HourlyForecast","hourlyTemp","setHourlyTemp","getHourlyWeather","Date","QueryBuilderIcon","overflow-y","height","map","temp","Card","width","toLocaleTimeString","timeStyle","src","concat","WeeklyForecast","today","weeklyWeatherData","setWeeklyWeatherData","getWeeklyWeather","CalendarMonthIcon","dayInfo","toDateString","toLocaleDateString","weekday","App","backgroundColor","backgroundColor2","setZipcode","now","getHours","background","e","target","value","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f8241092.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FmdGoodOutlinedIcon from \"@mui/icons-material/FmdGoodOutlined\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\nfunction LocationBar({ handleZipcode }) {\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"center\" spacing={2} alignItems=\"center\">\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            onChange={handleZipcode}\r\n            id=\"outlined-basic\"\r\n            label=\"Search Zip Code\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            sx={{ input: { color: \"#FFFFFF\" } }}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: \"#fff\",\r\n                fontWeight: \"bold\",\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <Button>\r\n            <FmdGoodOutlinedIcon fontSize=\"large\" style={{ color: \"#FFF\" }} />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <Stack\r\n            direction=\"row\"\r\n            divider={\r\n              <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n            }\r\n          >\r\n            <Button\r\n              variant=\"Text\"\r\n              fullWidth\r\n              style={{ color: \"#FFFFFF\", fontSize: \"20px\" }}\r\n            >\r\n              F &#176;\r\n            </Button>\r\n            <Button\r\n              variant=\"Text\"\r\n              fullWidth\r\n              style={{ color: \"#FFFFFF\", fontSize: \"20px\" }}\r\n            >\r\n              C &#176;\r\n            </Button>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\nexport default LocationBar;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction TodayInfo({ zipcode }) {\r\n  const [todayWeather, setTodayWeather] = useState({});\r\n\r\n  // Default get request for weather (Lowell)\r\n  useEffect(() => {\r\n    getTodayWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode\r\n  useEffect(() => {\r\n    getTodayWeather();\r\n  }, [zipcode]);\r\n\r\n  function getTodayWeather() {\r\n    console.log(\"hey\");\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?zip=\" +\r\n        zipcode +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=imperial&cnt=7\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setTodayWeather(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"center\">\r\n        {Object.values(todayWeather).length === 0 ? null : (\r\n          <Stack p={3.5}>\r\n            <Typography variant=\"h2\" color=\"white\" textAlign=\"center\">\r\n              {todayWeather[\"city\"][\"name\"]}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h2\"\r\n              color=\"white\"\r\n              textAlign=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {Math.round(todayWeather[\"list\"][0][\"temp\"][\"day\"])}&#176;\r\n            </Typography>\r\n            <Stack direction=\"row\" spacing=\"1.5em\" justifyContent=\"center\">\r\n              <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                L: {Math.round(todayWeather[\"list\"][0][\"temp\"][\"min\"])}&#176;\r\n              </Typography>\r\n              <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                H: {Math.round(todayWeather[\"list\"][0][\"temp\"][\"max\"])}&#176;\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default TodayInfo;\r\n\r\n//Add day and night temp and forecast (cloudy, rainy, etc)\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport Card from \"@mui/material/Card\";\r\nimport QueryBuilderIcon from \"@mui/icons-material/QueryBuilder\";\r\nimport Box from \"@mui/material/Box\";\r\nfunction HourlyForecast({ zipcode }) {\r\n  const [hourlyTemp, setHourlyTemp] = useState([]);\r\n\r\n  // Default get request for weather (Las Vegas)\r\n  useEffect(() => {\r\n    getHourlyWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode\r\n  useEffect(() => {\r\n    getHourlyWeather();\r\n  }, [zipcode]);\r\n\r\n  function getHourlyWeather() {\r\n    fetch(\r\n      \"https://pro.openweathermap.org/data/2.5/forecast/hourly?zip=\" +\r\n        zipcode +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=imperial&cnt=24\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(data);\r\n        setHourlyTemp(data[\"list\"]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n  var today = new Date();\r\n  return (\r\n    <>\r\n      <Stack spacing=\"2em\">\r\n        <Stack direction=\"row\" spacing=\".5em\" justifyContent=\"center\">\r\n          <QueryBuilderIcon fontSize=\"large\" style={{ color: \"#FFF\" }} />\r\n          <Typography variant=\"h4\" color=\"white\" fontWeight=\"bold\">\r\n            Hourly Forecast\r\n          </Typography>\r\n        </Stack>\r\n        <Box style={{ \"overflow-y\": \"auto\", height: \"60vh\" }}>\r\n          <Stack spacing=\"1eam\" p=\"1em\">\r\n            {hourlyTemp\r\n              ? hourlyTemp.map((temp) => (\r\n                  <Card>\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"center\"\r\n                      p=\"1em\"\r\n                      width=\"30vw\"\r\n                      height=\"3vh\"\r\n                    >\r\n                      <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                        {new Date(temp[\"dt\"] * 1000).toLocaleTimeString(\r\n                          \"en-US\",\r\n                          {\r\n                            timeStyle: \"short\",\r\n                          }\r\n                        )}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                        {Math.round(temp[\"main\"][\"temp\"])}&#176;\r\n                      </Typography>\r\n                      <Stack\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <img\r\n                          src={`https://openweathermap.org/img/wn/${temp[\"weather\"][0][\"icon\"]}@2x.png`}\r\n                        ></img>\r\n                        <Typography variant=\"h7\" fontWeight=\"bold\">\r\n                          {temp[\"weather\"][0][\"main\"]}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Card>\r\n                ))\r\n              : null}\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\nexport default HourlyForecast;\r\n","import React from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction WeeklyForecast({ zipcode }) {\r\n  var today = new Date();\r\n  const [weeklyWeatherData, setWeeklyWeatherData] = useState([]);\r\n\r\n  // Default get request for weather (Las Vegas)\r\n  useEffect(() => {\r\n    getWeeklyWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode\r\n  useEffect(() => {\r\n    getWeeklyWeather();\r\n  }, [zipcode]);\r\n\r\n  function getWeeklyWeather() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?zip=\" +\r\n        zipcode +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=imperial\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setWeeklyWeatherData(data[\"list\"]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <Stack spacing=\"2em\">\r\n        <Stack direction=\"row\" spacing=\".5em\" justifyContent=\"center\">\r\n          <CalendarMonthIcon fontSize=\"large\" style={{ color: \"#FFF\" }} />\r\n          <Typography variant=\"h4\" color=\"white\" fontWeight=\"bold\">\r\n            Weekly Forecast\r\n          </Typography>\r\n        </Stack>\r\n        <Box style={{ \"overflow-y\": \"auto\", height: \"60vh\" }}>\r\n          <Stack spacing=\"1em\" p=\"1em\">\r\n            {weeklyWeatherData\r\n              ? weeklyWeatherData.map((dayInfo) => (\r\n                  <Card>\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"center\"\r\n                      p=\"1em\"\r\n                      width=\"30vw\"\r\n                      height=\"8vh\"\r\n                    >\r\n                      <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                        {today.toDateString() !==\r\n                        new Date(dayInfo[\"dt\"] * 1000).toDateString()\r\n                          ? new Date(dayInfo[\"dt\"] * 1000).toLocaleDateString(\r\n                              \"en-us\",\r\n                              {\r\n                                weekday: \"short\",\r\n                              }\r\n                            )\r\n                          : \"Today\"}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                        {Math.round(dayInfo[\"temp\"][\"day\"])}&#176;\r\n                      </Typography>\r\n                      <Stack\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <img\r\n                          src={`https://openweathermap.org/img/wn/${dayInfo[\"weather\"][0][\"icon\"]}@2x.png`}\r\n                        ></img>\r\n                        <Typography variant=\"h7\" fontWeight=\"bold\">\r\n                          {dayInfo[\"weather\"][0][\"main\"]}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Card>\r\n                ))\r\n              : null}\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\nexport default WeeklyForecast;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./components/LocationBar\";\r\nimport LocationBar from \"./components/LocationBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TodayInfo from \"./components/TodayInfo\";\r\nimport HourlyForecast from \"./components/HourlyForecast\";\r\nimport WeeklyForecast from \"./components/WeeklyForecast\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nfunction App() {\r\n  var dayColor = \"#FBAB7E\";\r\n  var dayColor2 = \"#F7CE68\";\r\n  var nightColor1 = \"#243949\";\r\n  var nightColor2 = \"#09203f\";\r\n  var backgroundColor = null;\r\n  var backgroundColor2 = null;\r\n\r\n  const [zipcode, setZipcode] = useState(\"01852\");\r\n  const handleZipcode = (e) => {\r\n    var newZip = e.target.value;\r\n    if (newZip.length === 5) {\r\n      setZipcode(e.target.value);\r\n      console.log(zipcode);\r\n    }\r\n  };\r\n\r\n  if (Date.now().getHours >= 5 && Date.now().getHours <= 17) {\r\n    backgroundColor = dayColor;\r\n    backgroundColor2 = dayColor2;\r\n  } else {\r\n    backgroundColor = nightColor1;\r\n    backgroundColor2 = nightColor2;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      p={2}\r\n      sx={{\r\n        background: `linear-gradient(to right,${backgroundColor}, ${backgroundColor2})`,\r\n      }}\r\n      height=\"100vh\"\r\n    >\r\n      <LocationBar handleZipcode={handleZipcode} />\r\n      <TodayInfo zipcode={zipcode} />\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"space-evenly\"\r\n        divider={<Divider orientation=\"vertical\" variant=\"middle\" flexItem />}\r\n      >\r\n        <HourlyForecast zipcode={zipcode} />\r\n        <WeeklyForecast zipcode={zipcode} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n"],"sourceRoot":""}