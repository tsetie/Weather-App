{"version":3,"sources":["components/HourlyForecast.js","components/LocationBar.js","components/TodayDetails.js","components/TodayInfo.js","components/WeeklyForecast.js","App.js","index.js"],"names":["HourlyForecast1","_ref","zipcode","units","coords","setShowAlert","_useState","useState","_useState2","_slicedToArray","hourlyTemp","setHourlyTemp","getHourlyWeather","fetch","then","res","json","data","useEffect","latitude","longitude","catch","err","console","log","message","Date","React","createElement","Fragment","Card","sx","backgroundColor","borderRadius","p","m","overflow","Typography","color","fontWeight","mb","Stack","direction","map","temp","i","alignItems","variant","toLocaleTimeString","timeStyle","Box","component","src","concat","Math","round","LocationBar1","handleZipcode","handleCelcius","handleFahrenheit","handleGettingUserLocation","showAlert","justifyContent","Alert","marginBottom","severity","AlertTitle","Grid","container","item","xs","lg","TextField","onChange","type","label","input","background","width","InputLabelProps","style","Button","onClick","FmdGoodOutlinedIcon","fontSize","display","md","divider","Divider","orientation","flexItem","TodayDetails1","feelsLike","wind","gust","sunrise","sunset","humidity","chanceOfRain","pressure","todayDetails","setTodayDetails","getTodayDetails","Object","values","length","floor","pl","spacing","mt","transform","ThermostatIcon","WaterOutlinedIcon","WaterDropOutlinedIcon","SpeedOutlinedIcon","AirOutlinedIcon","WbSunnyOutlinedIcon","WbTwilightOutlinedIcon","TodayInfo1","todayWeather","setTodayWeather","getTodayWeather","height","WeeklyForecast1","today","weeklyWeatherData","setWeeklyWeatherData","getWeeklyWeather","ml","mr","dayInfo","toDateString","toLocaleDateString","weekday","App","setZipcode","_useState3","_useState4","_useState5","_useState6","setUnits","_useState7","_useState8","setCoords","pb","e","target","value","navigator","geolocation","getCurrentPosition","position","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.34565235.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Typography, Card, Stack, Grid, Box } from \"@mui/material\";\r\nfunction HourlyForecast1({ zipcode, units, coords, setShowAlert }) {\r\n  const [hourlyTemp, setHourlyTemp] = useState([]);\r\n\r\n  // Default get request for weather (Las Vegas)\r\n  useEffect(() => {\r\n    getHourlyWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode or units\r\n  useEffect(() => {\r\n    if (zipcode) {\r\n      getHourlyWeather();\r\n    } else {\r\n      getHourlyWeatherWithGeolocation();\r\n    }\r\n  }, [zipcode, units]);\r\n\r\n  function getHourlyWeather() {\r\n    fetch(\r\n      \"https://pro.openweathermap.org/data/2.5/forecast/hourly?zip=\" +\r\n        zipcode +\r\n        \"&appid=fcc51394a211b5d91ede128ba9c971e5&units=\" +\r\n        units +\r\n        \"&cnt=10\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data[\"cod\"] != \"404\") {\r\n          setHourlyTemp(data[\"list\"]);\r\n          setShowAlert(false);\r\n        } else {\r\n          setShowAlert(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  function getHourlyWeatherWithGeolocation() {\r\n    fetch(\r\n      \"https://pro.openweathermap.org/data/2.5/forecast/hourly?lat=\" +\r\n        coords.latitude +\r\n        \"&lon=\" +\r\n        coords.longitude +\r\n        \"&appid=fcc51394a211b5d91ede128ba9c971e5&units=\" +\r\n        units +\r\n        \"&cnt=10\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setHourlyTemp(data[\"list\"]);\r\n        setShowAlert(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  var today = new Date();\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={{\r\n          backgroundColor: \"#56637B\",\r\n          borderRadius: \"2.5em\",\r\n          p: \"2em\",\r\n          m: \"1em\",\r\n          overflow: \"auto\",\r\n        }}\r\n      >\r\n        <Typography color=\"#B1B2B5\" fontWeight=\"bold\" mb=\"1em\">\r\n          HOURLY FORECAST\r\n        </Typography>\r\n\r\n        <Stack direction=\"row\">\r\n          {hourlyTemp\r\n            ? hourlyTemp.map((temp, i) => (\r\n                <Stack alignItems=\"center\">\r\n                  <Typography variant=\"h7\" color=\"#B1B2B5\" fontWeight=\"bold\">\r\n                    {new Date(temp[\"dt\"] * 1000).toLocaleTimeString(\"en-US\", {\r\n                      timeStyle: \"short\",\r\n                    })}\r\n                  </Typography>\r\n                  <Box\r\n                    component=\"img\"\r\n                    src={`https://openweathermap.org/img/wn/${temp[\"weather\"][0][\"icon\"]}@2x.png`}\r\n                  ></Box>\r\n                  <Typography variant=\"h6\" color=\"#FFF\" fontWeight=\"bold\">\r\n                    {Math.round(temp[\"main\"][\"temp\"])}&#176;\r\n                  </Typography>\r\n                </Stack>\r\n              ))\r\n            : null}\r\n        </Stack>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default HourlyForecast1;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  Stack,\r\n  Alert,\r\n  AlertTitle,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport FmdGoodOutlinedIcon from \"@mui/icons-material/FmdGoodOutlined\";\r\n\r\nfunction LocationBar1({\r\n  handleZipcode,\r\n  handleCelcius,\r\n  handleFahrenheit,\r\n  handleGettingUserLocation,\r\n  showAlert,\r\n}) {\r\n  return (\r\n    <>\r\n      <Stack sx={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n        {showAlert ? (\r\n          <Alert sx={{ marginBottom: \"1em\" }} severity=\"error\">\r\n            <AlertTitle>\r\n              <strong>Location not found</strong>\r\n            </AlertTitle>\r\n            <strong>Enter a new zipcode!</strong>\r\n          </Alert>\r\n        ) : null}\r\n      </Stack>\r\n\r\n      <Grid container justifyContent=\"flex-end\" alignItems=\"center\">\r\n        <Grid item xs={11} lg={8}>\r\n          <Stack direction=\"row\">\r\n            <TextField\r\n              onChange={handleZipcode}\r\n              type=\"number\"\r\n              label=\"Search Zip Code\"\r\n              variant=\"filled\"\r\n              sx={{\r\n                input: { color: \"#B1B2B5\", background: \"#061426\" },\r\n                width: \"90% \",\r\n              }}\r\n              InputLabelProps={{\r\n                style: {\r\n                  color: \"#B1B2B5\",\r\n                  fontWeight: \"bold\",\r\n                },\r\n              }}\r\n            ></TextField>\r\n            <Button onClick={handleGettingUserLocation} sx={{ width: \"10%\" }}>\r\n              <FmdGoodOutlinedIcon\r\n                fontSize=\"large\"\r\n                style={{ color: \"#B1B2B5\" }}\r\n              />\r\n            </Button>\r\n          </Stack>\r\n        </Grid>\r\n\r\n        <Grid item lg={2} sx={{ display: { xs: \"none\", md: \"block\" } }}>\r\n          <Stack\r\n            direction=\"row\"\r\n            divider={\r\n              <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n            }\r\n          >\r\n            <Button\r\n              variant=\"Text\"\r\n              style={{ color: \"#B1B2B5\", fontSize: \"20px\" }}\r\n              onClick={handleFahrenheit}\r\n            >\r\n              F &#176;\r\n            </Button>\r\n            <Button\r\n              variant=\"Text\"\r\n              style={{ color: \"#B1B2B5\", fontSize: \"20px\" }}\r\n              onClick={handleCelcius}\r\n            >\r\n              C &#176;\r\n            </Button>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\nexport default LocationBar1;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Card, Typography, Stack, Grid } from \"@mui/material\";\r\nimport ThermostatIcon from \"@mui/icons-material/Thermostat\";\r\nimport WaterDropOutlinedIcon from \"@mui/icons-material/WaterDropOutlined\";\r\nimport AirOutlinedIcon from \"@mui/icons-material/AirOutlined\";\r\nimport WaterOutlinedIcon from \"@mui/icons-material/WaterOutlined\";\r\nimport WbSunnyOutlinedIcon from \"@mui/icons-material/WbSunnyOutlined\";\r\nimport WbTwilightOutlinedIcon from \"@mui/icons-material/WbTwilightOutlined\";\r\nimport SpeedOutlinedIcon from \"@mui/icons-material/SpeedOutlined\";\r\n\r\nfunction TodayDetails1({ zipcode, units, coords }) {\r\n  const [todayDetails, setTodayDetails] = useState({});\r\n\r\n  // Default get request for air conditions (Lowell)\r\n  useEffect(() => {\r\n    getTodayDetails(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode\r\n  useEffect(() => {\r\n    if (zipcode) {\r\n      getTodayDetails();\r\n    } else {\r\n      getTodayDetailsWithGeolocation();\r\n    }\r\n  }, [zipcode, units]);\r\n\r\n  function getTodayDetails() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?zip=\" +\r\n        zipcode +\r\n        \"&appid=fcc51394a211b5d91ede128ba9c971e5&units=\" +\r\n        units +\r\n        \"&cnt=1\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data[\"cod\"] != \"404\") {\r\n          setTodayDetails(data[\"list\"][0]);\r\n          console.log(data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  function getTodayDetailsWithGeolocation() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?lat=\" +\r\n        coords.latitude +\r\n        \"57&lon=\" +\r\n        coords.longitude +\r\n        \"&appid=fcc51394a211b5d91ede128ba9c971e5&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setTodayDetails(data[\"list\"][0]);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.message);\r\n      });\r\n  }\r\n  var feelsLike;\r\n  var wind;\r\n  var gust;\r\n  var sunrise;\r\n  var sunset;\r\n  var humidity;\r\n  var chanceOfRain;\r\n  var pressure;\r\n\r\n  if (Object.values(todayDetails).length !== 0) {\r\n    feelsLike = Math.floor(todayDetails[\"feels_like\"][\"day\"]);\r\n    wind = Math.floor(todayDetails[\"speed\"]);\r\n    gust = Math.floor(todayDetails[\"gust\"]);\r\n    sunrise = new Date(todayDetails[\"sunrise\"] * 1000).toLocaleTimeString(\r\n      \"en-US\",\r\n      {\r\n        timeStyle: \"short\",\r\n      }\r\n    );\r\n    sunset = new Date(todayDetails[\"sunset\"] * 1000).toLocaleTimeString(\r\n      \"en-US\",\r\n      {\r\n        timeStyle: \"short\",\r\n      }\r\n    );\r\n    humidity = Math.floor(todayDetails[\"humidity\"]);\r\n    chanceOfRain = todayDetails[\"pop\"] * 100;\r\n    pressure = Math.floor(todayDetails[\"pressure\"] * 0.02953);\r\n  }\r\n  return (\r\n    <>\r\n      <Stack pl=\"1.5em\">\r\n        <Grid container spacing={2} width=\"96%\">\r\n          <Grid item xs={6} lg={3}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: \"#56637B\",\r\n                borderRadius: \"2.5em\",\r\n                p: \"1.5em\",\r\n                mt: \"1em\",\r\n              }}\r\n            >\r\n              <Stack>\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                  width=\"130vw\"\r\n                  sx={{\r\n                    transform: {\r\n                      xs: \"translate(-1.8%)\",\r\n                      md: \"translate(-.2%)\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <ThermostatIcon sx={{ color: \"#B1B2B5\" }} />\r\n                  <Typography variant=\"h6\" color=\"#B1B2B5\" fontWeight=\"bold\">\r\n                    Feels Like\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                  {feelsLike}\r\n                  {\"\\u00B0\"}\r\n                </Typography>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} lg={3}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: \"#56637B\",\r\n                borderRadius: \"2.5em\",\r\n                p: \"1.5em\",\r\n                mt: \"1em\",\r\n              }}\r\n            >\r\n              <Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                  <WaterOutlinedIcon sx={{ color: \"#B1B2B5\" }} />\r\n                  <Typography variant=\"h6\" color=\"#B1B2B5\" fontWeight=\"bold\">\r\n                    Humidity\r\n                  </Typography>\r\n                </Stack>\r\n                <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                  {humidity}%\r\n                </Typography>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} lg={3}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: \"#56637B\",\r\n                borderRadius: \"2.5em\",\r\n                p: \"1.5em\",\r\n                mt: \"1em\",\r\n              }}\r\n            >\r\n              <Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                  <WaterDropOutlinedIcon sx={{ color: \"#B1B2B5\" }} />\r\n                  <Typography variant=\"h6\" color=\"#B1B2B5\" fontWeight=\"bold\">\r\n                    Rain\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                  {chanceOfRain}%\r\n                </Typography>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} lg={3}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: \"#56637B\",\r\n                borderRadius: \"2.5em\",\r\n                p: \"1.5em\",\r\n                mt: \"1em\",\r\n              }}\r\n            >\r\n              <Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                  <SpeedOutlinedIcon sx={{ color: \"#B1B2B5\" }} />\r\n                  <Typography variant=\"h6\" color=\"#B1B2B5\" fontWeight=\"bold\">\r\n                    Pressure\r\n                  </Typography>\r\n                </Stack>\r\n                <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                  {pressure} inHg\r\n                </Typography>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} lg={3}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: \"#56637B\",\r\n                borderRadius: \"2.5em\",\r\n                p: \"1.5em\",\r\n                mt: \"1em\",\r\n              }}\r\n            >\r\n              <Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                  <AirOutlinedIcon sx={{ color: \"#B1B2B5\" }} />\r\n                  <Typography variant=\"h6\" color=\"#B1B2B5\" fontWeight=\"bold\">\r\n                    Wind\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                {units == \"imperial\" ? (\r\n                  <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                    {wind} mph\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                    {wind} km/h\r\n                  </Typography>\r\n                )}\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} lg={3}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: \"#56637B\",\r\n                borderRadius: \"2.5em\",\r\n                p: \"1.5em\",\r\n                mt: \"1em\",\r\n              }}\r\n            >\r\n              <Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                  <AirOutlinedIcon sx={{ color: \"#B1B2B5\" }} />\r\n                  <Typography variant=\"h6\" color=\"#B1B2B5\" fontWeight=\"bold\">\r\n                    Gust\r\n                  </Typography>\r\n                </Stack>\r\n                {units == \"imperial\" ? (\r\n                  <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                    {gust} mph\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                    {gust} km/h\r\n                  </Typography>\r\n                )}\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} lg={3}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: \"#56637B\",\r\n                borderRadius: \"2.5em\",\r\n                p: \"1.5em\",\r\n                mt: \"1em\",\r\n              }}\r\n            >\r\n              <Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                  <WbSunnyOutlinedIcon sx={{ color: \"#B1B2B5\" }} />\r\n                  <Typography variant=\"h6\" color=\"#B1B2B5\" fontWeight=\"bold\">\r\n                    Sunrise\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                  {sunrise}\r\n                </Typography>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} lg={3}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: \"#56637B\",\r\n                borderRadius: \"2.5em\",\r\n                p: \"1.5em\",\r\n                mt: \"1em\",\r\n              }}\r\n            >\r\n              <Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                  <WbTwilightOutlinedIcon sx={{ color: \"#B1B2B5\" }} />\r\n                  <Typography variant=\"h6\" color=\"#B1B2B5\" fontWeight=\"bold\">\r\n                    Sunset\r\n                  </Typography>\r\n                </Stack>\r\n                <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                  {sunset}\r\n                </Typography>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\nexport default TodayDetails1;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Typography, Card, Stack, Grid } from \"@mui/material\";\r\n\r\nfunction TodayInfo1({ zipcode, units, coords }) {\r\n  const [todayWeather, setTodayWeather] = useState({});\r\n  // Default get request for weather (Lowell)\r\n  useEffect(() => {\r\n    getTodayWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode\r\n  useEffect(() => {\r\n    if (zipcode) {\r\n      getTodayWeather();\r\n    } else {\r\n      getTodayWeatherWithGeolocation();\r\n    }\r\n  }, [zipcode, units]);\r\n\r\n  function getTodayWeather() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?zip=\" +\r\n        zipcode +\r\n        \"&appid=fcc51394a211b5d91ede128ba9c971e5&units=\" +\r\n        units +\r\n        \"&cnt=7\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data[\"cod\"] != \"404\") {\r\n          setTodayWeather(data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.message);\r\n      });\r\n  }\r\n  function getTodayWeatherWithGeolocation() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?lat=\" +\r\n        coords.latitude +\r\n        \"57&lon=\" +\r\n        coords.longitude +\r\n        \"&appid=fcc51394a211b5d91ede128ba9c971e5&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setTodayWeather(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      {Object.values(todayWeather).length === 0 ? null : (\r\n        <Stack\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          m=\"1em\"\r\n          width=\"90%\"\r\n          height=\"90%\"\r\n        >\r\n          <Typography variant=\"h3\" color=\"white\">\r\n            {todayWeather[\"city\"][\"name\"]}\r\n          </Typography>\r\n          <Stack direction=\"row\" alignItems=\"center\">\r\n            <Typography variant=\"h8\" color=\"#B1B2B5\">\r\n              {todayWeather[\"list\"][0][\"weather\"][0][\"main\"]}\r\n            </Typography>\r\n            <img\r\n              src={`https://openweathermap.org/img/wn/${todayWeather[\"list\"][0][\"weather\"][0][\"icon\"]}.png`}\r\n            ></img>\r\n          </Stack>\r\n\r\n          <Typography variant=\"h2\" color=\"white\" fontWeight=\"bold\">\r\n            {Math.round(todayWeather[\"list\"][0][\"temp\"][\"day\"])}&#176;\r\n          </Typography>\r\n          <Stack direction=\"row\" spacing=\"1.5em\">\r\n            <Typography variant=\"h8\" color=\"#B1B2B5\">\r\n              L: {Math.round(todayWeather[\"list\"][0][\"temp\"][\"min\"])}\r\n              &#176;\r\n            </Typography>\r\n            <Typography variant=\"h8\" color=\"#B1B2B5\">\r\n              H: {Math.round(todayWeather[\"list\"][0][\"temp\"][\"max\"])}\r\n              &#176;\r\n            </Typography>\r\n          </Stack>\r\n        </Stack>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default TodayInfo1;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  ListItem,\r\n  Stack,\r\n  Box,\r\n  Divider,\r\n  List,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nfunction WeeklyForecast1({ zipcode, units, coords }) {\r\n  var today = new Date();\r\n  const [weeklyWeatherData, setWeeklyWeatherData] = useState([]);\r\n\r\n  // Default get request for weather (Las Vegas)\r\n  useEffect(() => {\r\n    getWeeklyWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode or units\r\n  useEffect(() => {\r\n    if (zipcode) {\r\n      getWeeklyWeather();\r\n    } else {\r\n      getWeeklyWeatherWithGeolocation();\r\n    }\r\n  }, [zipcode, units, coords]);\r\n\r\n  function getWeeklyWeather() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?zip=\" +\r\n        zipcode +\r\n        \"&appid=fcc51394a211b5d91ede128ba9c971e5&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data[\"cod\"] != \"404\") {\r\n          setWeeklyWeatherData(data[\"list\"]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  function getWeeklyWeatherWithGeolocation() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?lat=\" +\r\n        coords.latitude +\r\n        \"57&lon=\" +\r\n        coords.longitude +\r\n        \"&appid=fcc51394a211b5d91ede128ba9c971e5&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setWeeklyWeatherData(data[\"list\"]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={{\r\n          backgroundColor: \"#56637B\",\r\n          borderRadius: \"2.5em\",\r\n          mt: \"2em\",\r\n          p: \"2em\",\r\n          ml: \"1em\",\r\n          mr: \"1em\",\r\n        }}\r\n      >\r\n        <Typography color=\"#B1B2B5\" fontWeight=\"bold\">\r\n          7-DAY FORECAST\r\n        </Typography>\r\n        <Grid container>\r\n          <Stack width=\"100%\">\r\n            {weeklyWeatherData\r\n              ? weeklyWeatherData.map((dayInfo, i) => (\r\n                  <>\r\n                    {i == 0 ? null : <Divider />}\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      height=\"3.5vh\"\r\n                      mb=\"1em\"\r\n                      mt=\"1em\"\r\n                      justifyContent=\"space-around\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Grid item xs={3} lg={3}>\r\n                        <Typography variant=\"h7\" color=\"#B1B2B5\">\r\n                          {today.toDateString() !==\r\n                          new Date(dayInfo[\"dt\"] * 1000).toDateString()\r\n                            ? new Date(dayInfo[\"dt\"] * 1000).toLocaleDateString(\r\n                                \"en-us\",\r\n                                {\r\n                                  weekday: \"short\",\r\n                                }\r\n                              )\r\n                            : \"Today\"}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={3} lg={2}>\r\n                        <Typography variant=\"h7\" color=\"#FFF\" fontWeight=\"bold\">\r\n                          {Math.round(dayInfo[\"temp\"][\"day\"])}&#176;\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={6} lg={5}>\r\n                        <Stack direction=\"row\" alignItems=\"center\">\r\n                          <img\r\n                            src={`https://openweathermap.org/img/wn/${dayInfo[\"weather\"][0][\"icon\"]}@2x.png`}\r\n                          ></img>\r\n                          <Typography variant=\"h7\" color=\"#FFF\">\r\n                            {dayInfo[\"weather\"][0][\"main\"]}\r\n                          </Typography>\r\n                        </Stack>\r\n                      </Grid>\r\n                    </Stack>\r\n                  </>\r\n                ))\r\n              : null}\r\n          </Stack>\r\n        </Grid>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default WeeklyForecast1;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport HourlyForecast1 from \"./components/HourlyForecast\";\r\nimport LocationBar1 from \"./components/LocationBar\";\r\nimport TodayDetails1 from \"./components/TodayDetails\";\r\nimport TodayInfo1 from \"./components/TodayInfo\";\r\nimport WeeklyForecast1 from \"./components/WeeklyForecast\";\r\n\r\nfunction App() {\r\n  var dayColor = \"#FBAB7E\";\r\n  var dayColor2 = \"#F7CE68\";\r\n  var nightColor1 = \"#243949\";\r\n  var nightColor2 = \"#09203f\";\r\n  var backgroundColor = null;\r\n  var backgroundColor2 = null;\r\n\r\n  const [zipcode, setZipcode] = useState(\"01852\");\r\n  const handleZipcode = (e) => {\r\n    var newZip = e.target.value;\r\n    if (newZip.length === 5) {\r\n      setZipcode(e.target.value);\r\n    }\r\n  };\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  // Changing units b/w F & C\r\n  const [units, setUnits] = useState(\"imperial\");\r\n  const handleCelcius = (e) => {\r\n    setUnits(\"metric\");\r\n  };\r\n  const handleFahrenheit = (e) => {\r\n    setUnits(\"imperial\");\r\n  };\r\n\r\n  // Getting users location with geolocation\r\n  const [coords, setCoords] = useState(null);\r\n  const handleGettingUserLocation = (e) => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setZipcode(null); // set zipcode null so it wont go into the zipcode fetch when useEffect is triggered\r\n        setCoords(position.coords);\r\n      });\r\n    } else {\r\n      console.log(\"Unable to get geolocation.\");\r\n    }\r\n  };\r\n  // Changing background based on  daytime/nighttime (removed for now)\r\n  // if (Date.now().getHours >= 5 && Date.now().getHours <= 17) {\r\n  //   backgroundColor = dayColor;\r\n  //   backgroundColor2 = dayColor2;\r\n  // } else {\r\n  backgroundColor = nightColor1;\r\n  backgroundColor2 = nightColor2;\r\n  // }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      sx={{\r\n        pb: \"1em\",\r\n        background: `linear-gradient(to right,${backgroundColor}, ${backgroundColor2})`,\r\n      }}\r\n    >\r\n      <Grid item xs={12} lg={12} m=\"1em\">\r\n        <LocationBar1\r\n          handleZipcode={handleZipcode}\r\n          handleCelcius={handleCelcius}\r\n          handleFahrenheit={handleFahrenheit}\r\n          handleGettingUserLocation={handleGettingUserLocation}\r\n          showAlert={showAlert}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} lg={4}>\r\n        <TodayInfo1 zipcode={zipcode} units={units} coords={coords} />\r\n      </Grid>\r\n      <Grid item xs={12} lg={7}>\r\n        <HourlyForecast1\r\n          zipcode={zipcode}\r\n          units={units}\r\n          coords={coords}\r\n          setShowAlert={setShowAlert}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} lg={4} justifyContent=\"space-between\">\r\n        <WeeklyForecast1 zipcode={zipcode} units={units} coords={coords} />\r\n      </Grid>\r\n      <Grid item xs={12} lg={7}>\r\n        <TodayDetails1 zipcode={zipcode} units={units} coords={coords} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}