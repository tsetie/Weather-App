{"version":3,"sources":["components/LocationBar.js","components/TodayInfo.js","components/HourlyForecast.js","components/WeeklyForecast.js","App.js","index.js"],"names":["LocationBar","_ref","handleZipcode","handleCelcius","handleFahrenheit","handleGettingUserLocation","showAlert","React","createElement","Fragment","Stack","sx","justifyContent","alignItems","Alert","marginBottom","severity","AlertTitle","Grid","container","spacing","item","xs","TextField","onChange","type","id","label","variant","fullWidth","input","color","InputLabelProps","style","fontWeight","Button","onClick","FmdGoodOutlinedIcon","fontSize","direction","divider","Divider","orientation","flexItem","TodayInfo","zipcode","units","coords","_useState","useState","_useState2","_slicedToArray","todayWeather","setTodayWeather","getTodayWeather","console","log","fetch","then","res","json","data","catch","err","useEffect","latitude","longitude","message","Box","display","Object","values","length","p","Typography","textAlign","Math","round","HourlyForecast","setShowAlert","hourlyTemp","setHourlyTemp","getHourlyWeather","Date","QueryBuilderIcon","overflow-y","height","map","temp","Card","width","toLocaleTimeString","timeStyle","src","concat","WeeklyForecast","today","weeklyWeatherData","setWeeklyWeatherData","getWeeklyWeather","CalendarMonthIcon","dayInfo","toDateString","toLocaleDateString","weekday","App","backgroundColor","backgroundColor2","setZipcode","_useState3","_useState4","_useState5","_useState6","setUnits","_useState7","_useState8","setCoords","now","getHours","background","e","target","value","navigator","geolocation","getCurrentPosition","position","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4RAmFeA,MAxEf,SAAoBC,GAMjB,IALDC,EAAaD,EAAbC,cACAC,EAAaF,EAAbE,cACAC,EAAgBH,EAAhBG,iBACAC,EAAyBJ,EAAzBI,0BACAC,EAASL,EAATK,UAEA,OACEC,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACE,IAAK,CAACC,GAAI,CAAEC,eAAgB,SAAUC,WAAY,WAChDP,EACCC,IAAAC,cAACM,IAAK,CAACH,GAAI,CAAEI,aAAc,OAASC,SAAS,SAC3CT,IAAAC,cAACS,IAAU,KACTV,IAAAC,cAAA,cAAQ,uBAEVD,IAAAC,cAAA,cAAQ,yBAER,MAGND,IAAAC,cAACU,IAAI,CAACC,WAAS,EAACP,eAAe,SAASQ,QAAS,EAAGP,WAAW,UAC7DN,IAAAC,cAACU,IAAI,CAACG,MAAI,EAACC,GAAI,GACbf,IAAAC,cAACe,IAAS,CACRC,SAAUtB,EACVuB,KAAK,SACLC,GAAG,iBACHC,MAAM,kBACNC,QAAQ,WACRC,WAAS,EACTlB,GAAI,CAAEmB,MAAO,CAAEC,MAAO,YACtBC,gBAAiB,CACfC,MAAO,CACLF,MAAO,OACPG,WAAY,YAKpB3B,IAAAC,cAACU,IAAI,CAACG,MAAI,EAACC,GAAI,GACbf,IAAAC,cAAC2B,IAAM,CAACC,QAAS/B,GACfE,IAAAC,cAAC6B,IAAmB,CAACC,SAAS,QAAQL,MAAO,CAAEF,MAAO,YAG1DxB,IAAAC,cAACU,IAAI,CAACG,MAAI,EAACC,GAAI,GACbf,IAAAC,cAACE,IAAK,CACJ6B,UAAU,MACVC,QACEjC,IAAAC,cAACiC,IAAO,CAACC,YAAY,WAAWd,QAAQ,SAASe,UAAQ,KAG3DpC,IAAAC,cAAC2B,IAAM,CACLP,QAAQ,OACRC,WAAS,EACTI,MAAO,CAAEF,MAAO,UAAWO,SAAU,QACrCF,QAAShC,GACV,UAGDG,IAAAC,cAAC2B,IAAM,CACLP,QAAQ,OACRC,WAAS,EACTI,MAAO,CAAEF,MAAO,UAAWO,SAAU,QACrCF,QAASjC,GACV,iCCiBEyC,MArFf,SAAkB3C,GAA6B,IAA1B4C,EAAO5C,EAAP4C,QAASC,EAAK7C,EAAL6C,MAAOC,EAAM9C,EAAN8C,OAAMC,EACDC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAgBpC,SAASI,IACPC,QAAQC,IAAI,OACZC,MACE,8DACEZ,EACA,iDACAC,EACA,UAEDY,KAAK,SAACC,GAAG,OAAKA,EAAIC,SAClBF,KAAK,SAACG,GACc,OAAfA,EAAU,KACZR,EAAgBQ,KAGnBC,MAAM,SAACC,MAuBZ,OAnDAC,oBAAU,WACRV,KACC,IAGHU,oBAAU,WACJnB,EACFS,IA0BFG,MACE,8DACEV,EAAOkB,SACP,UACAlB,EAAOmB,UACP,iDACApB,GAEDY,KAAK,SAACC,GAAG,OAAKA,EAAIC,SAClBF,KAAK,SAACG,GACLN,QAAQC,IAAIK,GACZR,EAAgBQ,KAEjBC,MAAM,SAACC,GACNR,QAAQC,IAAIO,EAAII,YApCnB,CAACtB,EAASC,IAyCXvC,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAC4D,IAAG,CAACC,QAAQ,OAAOzD,eAAe,UACO,IAAvC0D,OAAOC,OAAOnB,GAAcoB,OAAe,KAC1CjE,IAAAC,cAACE,IAAK,CAAC+D,EAAG,KACRlE,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKG,MAAM,QAAQ4C,UAAU,UAC9CvB,EAAmB,KAAQ,MAE9B7C,IAAAC,cAACkE,IAAU,CACT9C,QAAQ,KACRG,MAAM,QACN4C,UAAU,SACV/D,eAAe,UAEdgE,KAAKC,MAAMzB,EAAmB,KAAE,GAAS,KAAO,KAAG,QAEtD7C,IAAAC,cAACE,IAAK,CAAC6B,UAAU,MAAMnB,QAAQ,QAAQR,eAAe,UACpDL,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKG,MAAM,OAAOG,WAAW,QAAO,MAClD0C,KAAKC,MAAMzB,EAAmB,KAAE,GAAS,KAAO,KAAG,QAEzD7C,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKG,MAAM,OAAOG,WAAW,QAAO,MAClD0C,KAAKC,MAAMzB,EAAmB,KAAE,GAAS,KAAO,KAAG,uCCyCxD0B,MA/Gf,SAAuB7E,GAA2C,IAAxC4C,EAAO5C,EAAP4C,QAASC,EAAK7C,EAAL6C,MAAOC,EAAM9C,EAAN8C,OAAQgC,EAAY9E,EAAZ8E,aAAY/B,EACxBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzCgC,EAAU9B,EAAA,GAAE+B,EAAa/B,EAAA,GAgBhC,SAASgC,IACPzB,MACE,+DACEZ,EACA,iDACAC,EACA,WAEDY,KAAK,SAACC,GAAG,OAAKA,EAAIC,SAClBF,KAAK,SAACG,GACc,OAAfA,EAAU,KACZoB,EAAcpB,EAAW,MACzBkB,GAAa,IAEbA,GAAa,KAyBrB,OApDAf,oBAAU,WACRkB,KACC,IAGHlB,oBAAU,WACJnB,EACFqC,IA0BFzB,MACE,+DACEV,EAAOkB,SACP,QACAlB,EAAOmB,UACP,iDACApB,GAEDY,KAAK,SAACC,GAAG,OAAKA,EAAIC,SAClBF,KAAK,SAACG,GACLoB,EAAcpB,EAAW,MACzBkB,GAAa,KAEdjB,MAAM,SAACC,GACNR,QAAQC,IAAIO,EAAII,YApCnB,CAACtB,EAASC,IAwCD,IAAIqC,KAEd5E,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACE,IAAK,CAACU,QAAQ,OACbb,IAAAC,cAACE,IAAK,CAAC6B,UAAU,MAAMnB,QAAQ,OAAOR,eAAe,UACnDL,IAAAC,cAAC4E,IAAgB,CAAC9C,SAAS,QAAQL,MAAO,CAAEF,MAAO,UACnDxB,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKG,MAAM,QAAQG,WAAW,QAAO,oBAI3D3B,IAAAC,cAAC4D,IAAG,CAACnC,MAAO,CAAEoD,aAAc,OAAQC,OAAQ,SAC1C/E,IAAAC,cAACE,IAAK,CAACU,QAAQ,OAAOqD,EAAE,OACrBO,EACGA,EAAWO,IAAI,SAACC,GAAI,OAClBjF,IAAAC,cAACiF,IAAI,KACHlF,IAAAC,cAACE,IAAK,CACJ6B,UAAU,MACV3B,eAAe,gBACfC,WAAW,SACX4D,EAAE,MACFiB,MAAM,OACNJ,OAAO,OAEP/E,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKM,WAAW,QACjC,IAAIiD,KAAkB,IAAbK,EAAS,IAAUG,mBAC3B,QACA,CACEC,UAAW,WAIjBrF,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKM,WAAW,QACjC0C,KAAKC,MAAMW,EAAW,KAAQ,MAAG,QAEpCjF,IAAAC,cAACE,IAAK,CACJ6B,UAAU,MACV3B,eAAe,SACfC,WAAW,UAEXN,IAAAC,cAAA,OACEqF,IAAG,qCAAAC,OAAuCN,EAAc,QAAE,GAAS,KAAC,aAEtEjF,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKM,WAAW,QACjCsD,EAAc,QAAE,GAAS,WAMpC,2BCKDO,MAjHf,SAAuB9F,GAA6B,IAA1B4C,EAAO5C,EAAP4C,QAASC,EAAK7C,EAAL6C,MAAOC,EAAM9C,EAAN8C,OACpCiD,EAAQ,IAAIb,KAAOnC,EAC2BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvDiD,EAAiB/C,EAAA,GAAEgD,EAAoBhD,EAAA,GAgB9C,SAASiD,IACP1C,MACE,8DACEZ,EACA,iDACAC,GAEDY,KAAK,SAACC,GAAG,OAAKA,EAAIC,SAClBF,KAAK,SAACG,GACLN,QAAQC,IAAIK,GACO,OAAfA,EAAU,KACZqC,EAAqBrC,EAAW,QAGnCC,MAAM,SAACC,GACNR,QAAQC,IAAIO,EAAII,WAsBtB,OAlDAH,oBAAU,WACRmC,KACC,IAGHnC,oBAAU,WACJnB,EACFsD,IA0BF1C,MACE,8DACEV,EAAOkB,SACP,UACAlB,EAAOmB,UACP,iDACApB,GAEDY,KAAK,SAACC,GAAG,OAAKA,EAAIC,SAClBF,KAAK,SAACG,GACLN,QAAQC,IAAIK,GACZqC,EAAqBrC,EAAW,QAEjCC,MAAM,SAACC,GACNR,QAAQC,IAAIO,EAAII,YApCnB,CAACtB,EAASC,EAAOC,IAwClBxC,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACE,IAAK,CAACU,QAAQ,OACbb,IAAAC,cAACE,IAAK,CAAC6B,UAAU,MAAMnB,QAAQ,OAAOR,eAAe,UACnDL,IAAAC,cAAC4F,IAAiB,CAAC9D,SAAS,QAAQL,MAAO,CAAEF,MAAO,UACpDxB,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKG,MAAM,QAAQG,WAAW,QAAO,oBAI3D3B,IAAAC,cAAC4D,IAAG,CAACnC,MAAO,CAAEoD,aAAc,OAAQC,OAAQ,SAC1C/E,IAAAC,cAACE,IAAK,CAACU,QAAQ,MAAMqD,EAAE,OACpBwB,EACGA,EAAkBV,IAAI,SAACc,GAAO,OAC5B9F,IAAAC,cAACiF,IAAI,KACHlF,IAAAC,cAACE,IAAK,CACJ6B,UAAU,MACV3B,eAAe,gBACfC,WAAW,SACX4D,EAAE,MACFiB,MAAM,OACNJ,OAAO,OAEP/E,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKM,WAAW,QACjC8D,EAAMM,iBACP,IAAInB,KAAqB,IAAhBkB,EAAY,IAAUC,eAC3B,IAAInB,KAAqB,IAAhBkB,EAAY,IAAUE,mBAC7B,QACA,CACEC,QAAS,UAGb,SAENjG,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKM,WAAW,QACjC0C,KAAKC,MAAMwB,EAAc,KAAO,KAAG,QAEtC9F,IAAAC,cAACE,IAAK,CACJ6B,UAAU,MACV3B,eAAe,SACfC,WAAW,UAEXN,IAAAC,cAAA,OACEqF,IAAG,qCAAAC,OAAuCO,EAAiB,QAAE,GAAS,KAAC,aAEzE9F,IAAAC,cAACkE,IAAU,CAAC9C,QAAQ,KAAKM,WAAW,QACjCmE,EAAiB,QAAE,GAAS,WAMvC,UCpBDI,MAlFf,WACE,IAIIC,EAAkB,KAClBC,EAAmB,KAAK3D,EAEEC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAAxCH,EAAOK,EAAA,GAAE0D,EAAU1D,EAAA,GAOxB2D,EAEgC5D,oBAAS,GAAM6D,EAAA3D,YAAA0D,EAAA,GAA1CvG,EAASwG,EAAA,GAAE/B,EAAY+B,EAAA,GAE9BC,EAC0B9D,mBAAS,YAAW+D,EAAA7D,YAAA4D,EAAA,GAAvCjE,EAAKkE,EAAA,GAAEC,EAAQD,EAAA,GAQtBE,EAC4BjE,mBAAS,MAAKkE,EAAAhE,YAAA+D,EAAA,GAAnCnE,EAAMoE,EAAA,GAAEC,EAASD,EAAA,GAoBxB,OARIhC,KAAKkC,MAAMC,UAAY,GAAKnC,KAAKkC,MAAMC,UAAY,IACrDZ,EAzCa,UA0CbC,EAzCc,YA2CdD,EA1CgB,UA2ChBC,EA1CgB,WA8ChBpG,gBAAC6D,IAAG,CACFK,EAAG,EACH9D,GAAI,CACF4G,WAAU,4BAAAzB,OAA8BY,EAAe,MAAAZ,OAAKa,EAAgB,MAE9ErB,OAAO,SAEP/E,gBAACP,EAAW,CACVE,cAjDgB,SAACsH,GAEC,IADTA,EAAEC,OAAOC,MACXlD,SACToC,EAAWY,EAAEC,OAAOC,OACpBnE,QAAQC,IAAIX,KA8CV1C,cAtCgB,SAACqH,GACrBP,EAAS,WAsCL7G,iBApCmB,SAACoH,GACxBP,EAAS,aAoCL5G,0BA/B4B,SAACmH,GAC7B,gBAAiBG,UACnBA,UAAUC,YAAYC,mBAAmB,SAAUC,GACjDlB,EAAW,MACXQ,EAAUU,EAAS/E,UAGrBQ,QAAQC,IAAI,+BAyBVlD,UAAWA,IAEbC,gBAACqC,EAAS,CAACC,QAASA,EAASC,MAAOA,EAAOC,OAAQA,IACnDxC,gBAACG,IAAK,CACJ6B,UAAU,MACV3B,eAAe,eACf4B,QAASjC,gBAACkC,IAAO,CAACC,YAAY,WAAWd,QAAQ,SAASe,UAAQ,KAElEpC,gBAACuE,EAAc,CACbjC,QAASA,EACTC,MAAOA,EACPC,OAAQA,EACRgC,aAAcA,IAEhBxE,gBAACwF,EAAc,CAAClD,QAASA,EAASC,MAAOA,EAAOC,OAAQA,OCnFnDgF,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5H,IAAAC,cAACD,IAAM6H,WAAU,KACf7H,IAAAC,cAACiG,EAAG","file":"static/js/main.a15a09f5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FmdGoodOutlinedIcon from \"@mui/icons-material/FmdGoodOutlined\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\n\r\nfunction LocationBar({\r\n  handleZipcode,\r\n  handleCelcius,\r\n  handleFahrenheit,\r\n  handleGettingUserLocation,\r\n  showAlert,\r\n}) {\r\n  return (\r\n    <>\r\n      <Stack sx={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n        {showAlert ? (\r\n          <Alert sx={{ marginBottom: \"1em\" }} severity=\"error\">\r\n            <AlertTitle>\r\n              <strong>Location not found</strong>\r\n            </AlertTitle>\r\n            <strong>Enter a new zipcode!</strong>\r\n          </Alert>\r\n        ) : null}\r\n      </Stack>\r\n\r\n      <Grid container justifyContent=\"center\" spacing={2} alignItems=\"center\">\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            onChange={handleZipcode}\r\n            type=\"number\"\r\n            id=\"outlined-basic\"\r\n            label=\"Search Zip Code\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            sx={{ input: { color: \"#FFFFFF\" } }}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: \"#fff\",\r\n                fontWeight: \"bold\",\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <Button onClick={handleGettingUserLocation}>\r\n            <FmdGoodOutlinedIcon fontSize=\"large\" style={{ color: \"#FFF\" }} />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <Stack\r\n            direction=\"row\"\r\n            divider={\r\n              <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n            }\r\n          >\r\n            <Button\r\n              variant=\"Text\"\r\n              fullWidth\r\n              style={{ color: \"#FFFFFF\", fontSize: \"20px\" }}\r\n              onClick={handleFahrenheit}\r\n            >\r\n              F &#176;\r\n            </Button>\r\n            <Button\r\n              variant=\"Text\"\r\n              fullWidth\r\n              style={{ color: \"#FFFFFF\", fontSize: \"20px\" }}\r\n              onClick={handleCelcius}\r\n            >\r\n              C &#176;\r\n            </Button>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\nexport default LocationBar;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction TodayInfo({ zipcode, units, coords }) {\r\n  const [todayWeather, setTodayWeather] = useState({});\r\n\r\n  // Default get request for weather (Lowell)\r\n  useEffect(() => {\r\n    getTodayWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode\r\n  useEffect(() => {\r\n    if (zipcode) {\r\n      getTodayWeather();\r\n    } else {\r\n      getTodayWeatherWithGeolocation();\r\n    }\r\n  }, [zipcode, units]);\r\n\r\n  function getTodayWeather() {\r\n    console.log(\"hey\");\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?zip=\" +\r\n        zipcode +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units +\r\n        \"&cnt=7\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data[\"cod\"] != \"404\") {\r\n          setTodayWeather(data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.message);\r\n      });\r\n  }\r\n  function getTodayWeatherWithGeolocation() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?lat=\" +\r\n        coords.latitude +\r\n        \"57&lon=\" +\r\n        coords.longitude +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setTodayWeather(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"center\">\r\n        {Object.values(todayWeather).length === 0 ? null : (\r\n          <Stack p={3.5}>\r\n            <Typography variant=\"h2\" color=\"white\" textAlign=\"center\">\r\n              {todayWeather[\"city\"][\"name\"]}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h2\"\r\n              color=\"white\"\r\n              textAlign=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {Math.round(todayWeather[\"list\"][0][\"temp\"][\"day\"])}&#176;\r\n            </Typography>\r\n            <Stack direction=\"row\" spacing=\"1.5em\" justifyContent=\"center\">\r\n              <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                L: {Math.round(todayWeather[\"list\"][0][\"temp\"][\"min\"])}&#176;\r\n              </Typography>\r\n              <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                H: {Math.round(todayWeather[\"list\"][0][\"temp\"][\"max\"])}&#176;\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default TodayInfo;\r\n\r\n//Add day and night temp and forecast (cloudy, rainy, etc)\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Snackbar, Typography } from \"@mui/material\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport Card from \"@mui/material/Card\";\r\nimport QueryBuilderIcon from \"@mui/icons-material/QueryBuilder\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\n\r\nfunction HourlyForecast({ zipcode, units, coords, setShowAlert }) {\r\n  const [hourlyTemp, setHourlyTemp] = useState([]);\r\n\r\n  // Default get request for weather (Las Vegas)\r\n  useEffect(() => {\r\n    getHourlyWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode or units\r\n  useEffect(() => {\r\n    if (zipcode) {\r\n      getHourlyWeather();\r\n    } else {\r\n      getHourlyWeatherWithGeolocation();\r\n    }\r\n  }, [zipcode, units]);\r\n\r\n  function getHourlyWeather() {\r\n    fetch(\r\n      \"https://pro.openweathermap.org/data/2.5/forecast/hourly?zip=\" +\r\n        zipcode +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units +\r\n        \"&cnt=24\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data[\"cod\"] != \"404\") {\r\n          setHourlyTemp(data[\"list\"]);\r\n          setShowAlert(false);\r\n        } else {\r\n          setShowAlert(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  function getHourlyWeatherWithGeolocation() {\r\n    fetch(\r\n      \"https://pro.openweathermap.org/data/2.5/forecast/hourly?lat=\" +\r\n        coords.latitude +\r\n        \"&lon=\" +\r\n        coords.longitude +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setHourlyTemp(data[\"list\"]);\r\n        setShowAlert(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  var today = new Date();\r\n  return (\r\n    <>\r\n      <Stack spacing=\"2em\">\r\n        <Stack direction=\"row\" spacing=\".5em\" justifyContent=\"center\">\r\n          <QueryBuilderIcon fontSize=\"large\" style={{ color: \"#FFF\" }} />\r\n          <Typography variant=\"h4\" color=\"white\" fontWeight=\"bold\">\r\n            Hourly Forecast\r\n          </Typography>\r\n        </Stack>\r\n        <Box style={{ \"overflow-y\": \"auto\", height: \"60vh\" }}>\r\n          <Stack spacing=\"1eam\" p=\"1em\">\r\n            {hourlyTemp\r\n              ? hourlyTemp.map((temp) => (\r\n                  <Card>\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"center\"\r\n                      p=\"1em\"\r\n                      width=\"30vw\"\r\n                      height=\"3vh\"\r\n                    >\r\n                      <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                        {new Date(temp[\"dt\"] * 1000).toLocaleTimeString(\r\n                          \"en-US\",\r\n                          {\r\n                            timeStyle: \"short\",\r\n                          }\r\n                        )}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                        {Math.round(temp[\"main\"][\"temp\"])}&#176;\r\n                      </Typography>\r\n                      <Stack\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <img\r\n                          src={`https://openweathermap.org/img/wn/${temp[\"weather\"][0][\"icon\"]}@2x.png`}\r\n                        ></img>\r\n                        <Typography variant=\"h7\" fontWeight=\"bold\">\r\n                          {temp[\"weather\"][0][\"main\"]}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Card>\r\n                ))\r\n              : null}\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\nexport default HourlyForecast;\r\n","import React from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction WeeklyForecast({ zipcode, units, coords }) {\r\n  var today = new Date();\r\n  const [weeklyWeatherData, setWeeklyWeatherData] = useState([]);\r\n\r\n  // Default get request for weather (Las Vegas)\r\n  useEffect(() => {\r\n    getWeeklyWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode or units\r\n  useEffect(() => {\r\n    if (zipcode) {\r\n      getWeeklyWeather();\r\n    } else {\r\n      getWeeklyWeatherWithGeolocation();\r\n    }\r\n  }, [zipcode, units, coords]);\r\n\r\n  function getWeeklyWeather() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?zip=\" +\r\n        zipcode +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data[\"cod\"] != \"404\") {\r\n          setWeeklyWeatherData(data[\"list\"]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  function getWeeklyWeatherWithGeolocation() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?lat=\" +\r\n        coords.latitude +\r\n        \"57&lon=\" +\r\n        coords.longitude +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setWeeklyWeatherData(data[\"list\"]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <Stack spacing=\"2em\">\r\n        <Stack direction=\"row\" spacing=\".5em\" justifyContent=\"center\">\r\n          <CalendarMonthIcon fontSize=\"large\" style={{ color: \"#FFF\" }} />\r\n          <Typography variant=\"h4\" color=\"white\" fontWeight=\"bold\">\r\n            Weekly Forecast\r\n          </Typography>\r\n        </Stack>\r\n        <Box style={{ \"overflow-y\": \"auto\", height: \"60vh\" }}>\r\n          <Stack spacing=\"1em\" p=\"1em\">\r\n            {weeklyWeatherData\r\n              ? weeklyWeatherData.map((dayInfo) => (\r\n                  <Card>\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"center\"\r\n                      p=\"1em\"\r\n                      width=\"30vw\"\r\n                      height=\"8vh\"\r\n                    >\r\n                      <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                        {today.toDateString() !==\r\n                        new Date(dayInfo[\"dt\"] * 1000).toDateString()\r\n                          ? new Date(dayInfo[\"dt\"] * 1000).toLocaleDateString(\r\n                              \"en-us\",\r\n                              {\r\n                                weekday: \"short\",\r\n                              }\r\n                            )\r\n                          : \"Today\"}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                        {Math.round(dayInfo[\"temp\"][\"day\"])}&#176;\r\n                      </Typography>\r\n                      <Stack\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <img\r\n                          src={`https://openweathermap.org/img/wn/${dayInfo[\"weather\"][0][\"icon\"]}@2x.png`}\r\n                        ></img>\r\n                        <Typography variant=\"h7\" fontWeight=\"bold\">\r\n                          {dayInfo[\"weather\"][0][\"main\"]}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Card>\r\n                ))\r\n              : null}\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\nexport default WeeklyForecast;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./components/LocationBar\";\r\nimport LocationBar from \"./components/LocationBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TodayInfo from \"./components/TodayInfo\";\r\nimport HourlyForecast from \"./components/HourlyForecast\";\r\nimport WeeklyForecast from \"./components/WeeklyForecast\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nfunction App() {\r\n  var dayColor = \"#FBAB7E\";\r\n  var dayColor2 = \"#F7CE68\";\r\n  var nightColor1 = \"#243949\";\r\n  var nightColor2 = \"#09203f\";\r\n  var backgroundColor = null;\r\n  var backgroundColor2 = null;\r\n\r\n  const [zipcode, setZipcode] = useState(\"01852\");\r\n  const handleZipcode = (e) => {\r\n    var newZip = e.target.value;\r\n    if (newZip.length === 5) {\r\n      setZipcode(e.target.value);\r\n      console.log(zipcode);\r\n    }\r\n  };\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  // Changing units b/w F & C\r\n  const [units, setUnits] = useState(\"imperial\");\r\n  const handleCelcius = (e) => {\r\n    setUnits(\"metric\");\r\n  };\r\n  const handleFahrenheit = (e) => {\r\n    setUnits(\"imperial\");\r\n  };\r\n\r\n  // Getting users location with geolocation\r\n  const [coords, setCoords] = useState(null);\r\n  const handleGettingUserLocation = (e) => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setZipcode(null); // set zipcode null so it wont go into the zipcode fetch when useEffect is triggered\r\n        setCoords(position.coords);\r\n      });\r\n    } else {\r\n      console.log(\"Unable to get geolocation.\");\r\n    }\r\n  };\r\n\r\n  if (Date.now().getHours >= 5 && Date.now().getHours <= 17) {\r\n    backgroundColor = dayColor;\r\n    backgroundColor2 = dayColor2;\r\n  } else {\r\n    backgroundColor = nightColor1;\r\n    backgroundColor2 = nightColor2;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      p={2}\r\n      sx={{\r\n        background: `linear-gradient(to right,${backgroundColor}, ${backgroundColor2})`,\r\n      }}\r\n      height=\"100vh\"\r\n    >\r\n      <LocationBar\r\n        handleZipcode={handleZipcode}\r\n        handleCelcius={handleCelcius}\r\n        handleFahrenheit={handleFahrenheit}\r\n        handleGettingUserLocation={handleGettingUserLocation}\r\n        showAlert={showAlert}\r\n      />\r\n      <TodayInfo zipcode={zipcode} units={units} coords={coords} />\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"space-evenly\"\r\n        divider={<Divider orientation=\"vertical\" variant=\"middle\" flexItem />}\r\n      >\r\n        <HourlyForecast\r\n          zipcode={zipcode}\r\n          units={units}\r\n          coords={coords}\r\n          setShowAlert={setShowAlert}\r\n        />\r\n        <WeeklyForecast zipcode={zipcode} units={units} coords={coords} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}