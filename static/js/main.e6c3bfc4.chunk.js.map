{"version":3,"sources":["components/LocationBar.js","components/TodayInfo.js","components/HourlyForecast.js","components/WeeklyForecast.js","App.js","index.js"],"names":["LocationBar","_ref","handleZipcode","handleCelcius","handleFahrenheit","handleGettingUserLocation","React","createElement","Fragment","Grid","container","justifyContent","spacing","alignItems","item","xs","TextField","onChange","id","label","variant","fullWidth","sx","input","color","InputLabelProps","style","fontWeight","Button","onClick","FmdGoodOutlinedIcon","fontSize","Stack","direction","divider","Divider","orientation","flexItem","TodayInfo","zipcode","units","coords","_useState","useState","_useState2","_slicedToArray","todayWeather","setTodayWeather","getTodayWeather","console","log","fetch","then","res","json","data","catch","err","message","useEffect","latitude","longitude","Box","display","Object","values","length","p","Typography","textAlign","Math","round","HourlyForecast","hourlyTemp","setHourlyTemp","getHourlyWeather","Date","QueryBuilderIcon","overflow-y","height","map","temp","Card","width","toLocaleTimeString","timeStyle","src","concat","WeeklyForecast","today","weeklyWeatherData","setWeeklyWeatherData","getWeeklyWeather","CalendarMonthIcon","dayInfo","toDateString","toLocaleDateString","weekday","App","backgroundColor","backgroundColor2","setZipcode","_useState3","_useState4","setUnits","_useState5","_useState6","setCoords","now","getHours","background","e","target","value","navigator","geolocation","getCurrentPosition","position","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e6c3bfc4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FmdGoodOutlinedIcon from \"@mui/icons-material/FmdGoodOutlined\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\nfunction LocationBar({\r\n  handleZipcode,\r\n  handleCelcius,\r\n  handleFahrenheit,\r\n  handleGettingUserLocation,\r\n}) {\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"center\" spacing={2} alignItems=\"center\">\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            onChange={handleZipcode}\r\n            id=\"outlined-basic\"\r\n            label=\"Search Zip Code\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            sx={{ input: { color: \"#FFFFFF\" } }}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: \"#fff\",\r\n                fontWeight: \"bold\",\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <Button onClick={handleGettingUserLocation}>\r\n            <FmdGoodOutlinedIcon fontSize=\"large\" style={{ color: \"#FFF\" }} />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <Stack\r\n            direction=\"row\"\r\n            divider={\r\n              <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n            }\r\n          >\r\n            <Button\r\n              variant=\"Text\"\r\n              fullWidth\r\n              style={{ color: \"#FFFFFF\", fontSize: \"20px\" }}\r\n              onClick={handleFahrenheit}\r\n            >\r\n              F &#176;\r\n            </Button>\r\n            <Button\r\n              variant=\"Text\"\r\n              fullWidth\r\n              style={{ color: \"#FFFFFF\", fontSize: \"20px\" }}\r\n              onClick={handleCelcius}\r\n            >\r\n              C &#176;\r\n            </Button>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\nexport default LocationBar;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction TodayInfo({ zipcode, units, coords }) {\r\n  const [todayWeather, setTodayWeather] = useState({});\r\n\r\n  // Default get request for weather (Lowell)\r\n  useEffect(() => {\r\n    getTodayWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode\r\n  useEffect(() => {\r\n    if (zipcode) {\r\n      getTodayWeather();\r\n    } else {\r\n      getTodayWeatherWithGeolocation();\r\n    }\r\n  }, [zipcode, units]);\r\n\r\n  function getTodayWeather() {\r\n    console.log(\"hey\");\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?zip=\" +\r\n        zipcode +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units +\r\n        \"&cnt=7\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setTodayWeather(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n  function getTodayWeatherWithGeolocation() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?lat=\" +\r\n        coords.latitude +\r\n        \"57&lon=\" +\r\n        coords.longitude +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setTodayWeather(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"center\">\r\n        {Object.values(todayWeather).length === 0 ? null : (\r\n          <Stack p={3.5}>\r\n            <Typography variant=\"h2\" color=\"white\" textAlign=\"center\">\r\n              {todayWeather[\"city\"][\"name\"]}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h2\"\r\n              color=\"white\"\r\n              textAlign=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {Math.round(todayWeather[\"list\"][0][\"temp\"][\"day\"])}&#176;\r\n            </Typography>\r\n            <Stack direction=\"row\" spacing=\"1.5em\" justifyContent=\"center\">\r\n              <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                L: {Math.round(todayWeather[\"list\"][0][\"temp\"][\"min\"])}&#176;\r\n              </Typography>\r\n              <Typography variant=\"h5\" color=\"#FFF\" fontWeight=\"bold\">\r\n                H: {Math.round(todayWeather[\"list\"][0][\"temp\"][\"max\"])}&#176;\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default TodayInfo;\r\n\r\n//Add day and night temp and forecast (cloudy, rainy, etc)\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport Card from \"@mui/material/Card\";\r\nimport QueryBuilderIcon from \"@mui/icons-material/QueryBuilder\";\r\nimport Box from \"@mui/material/Box\";\r\nfunction HourlyForecast({ zipcode, units, coords }) {\r\n  const [hourlyTemp, setHourlyTemp] = useState([]);\r\n\r\n  // Default get request for weather (Las Vegas)\r\n  useEffect(() => {\r\n    getHourlyWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode or units\r\n  useEffect(() => {\r\n    if (zipcode) {\r\n      getHourlyWeather();\r\n    } else {\r\n      getHourlyWeatherWithGeolocation();\r\n    }\r\n  }, [zipcode, units]);\r\n\r\n  function getHourlyWeather() {\r\n    fetch(\r\n      \"https://pro.openweathermap.org/data/2.5/forecast/hourly?zip=\" +\r\n        zipcode +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units +\r\n        \"&cnt=24\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(data);\r\n        setHourlyTemp(data[\"list\"]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  function getHourlyWeatherWithGeolocation() {\r\n    fetch(\r\n      \"https://pro.openweathermap.org/data/2.5/forecast/hourly?lat=\" +\r\n        coords.latitude +\r\n        \"&lon=\" +\r\n        coords.longitude +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setHourlyTemp(data[\"list\"]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  var today = new Date();\r\n  return (\r\n    <>\r\n      <Stack spacing=\"2em\">\r\n        <Stack direction=\"row\" spacing=\".5em\" justifyContent=\"center\">\r\n          <QueryBuilderIcon fontSize=\"large\" style={{ color: \"#FFF\" }} />\r\n          <Typography variant=\"h4\" color=\"white\" fontWeight=\"bold\">\r\n            Hourly Forecast\r\n          </Typography>\r\n        </Stack>\r\n        <Box style={{ \"overflow-y\": \"auto\", height: \"60vh\" }}>\r\n          <Stack spacing=\"1eam\" p=\"1em\">\r\n            {hourlyTemp\r\n              ? hourlyTemp.map((temp) => (\r\n                  <Card>\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"center\"\r\n                      p=\"1em\"\r\n                      width=\"30vw\"\r\n                      height=\"3vh\"\r\n                    >\r\n                      <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                        {new Date(temp[\"dt\"] * 1000).toLocaleTimeString(\r\n                          \"en-US\",\r\n                          {\r\n                            timeStyle: \"short\",\r\n                          }\r\n                        )}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                        {Math.round(temp[\"main\"][\"temp\"])}&#176;\r\n                      </Typography>\r\n                      <Stack\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <img\r\n                          src={`https://openweathermap.org/img/wn/${temp[\"weather\"][0][\"icon\"]}@2x.png`}\r\n                        ></img>\r\n                        <Typography variant=\"h7\" fontWeight=\"bold\">\r\n                          {temp[\"weather\"][0][\"main\"]}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Card>\r\n                ))\r\n              : null}\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\nexport default HourlyForecast;\r\n","import React from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction WeeklyForecast({ zipcode, units, coords }) {\r\n  var today = new Date();\r\n  const [weeklyWeatherData, setWeeklyWeatherData] = useState([]);\r\n\r\n  // Default get request for weather (Las Vegas)\r\n  useEffect(() => {\r\n    getWeeklyWeather(zipcode);\r\n  }, []);\r\n\r\n  // Get request for new zipcode or units\r\n  useEffect(() => {\r\n    if (zipcode) {\r\n      getWeeklyWeather();\r\n    } else {\r\n      getWeeklyWeatherWithGeolocation();\r\n    }\r\n  }, [zipcode, units, coords]);\r\n\r\n  function getWeeklyWeather() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?zip=\" +\r\n        zipcode +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setWeeklyWeatherData(data[\"list\"]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  function getWeeklyWeatherWithGeolocation() {\r\n    fetch(\r\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?lat=\" +\r\n        coords.latitude +\r\n        \"57&lon=\" +\r\n        coords.longitude +\r\n        \"&appid=0d31ac28d5b7522c7167936c3bc94907&units=\" +\r\n        units\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setWeeklyWeatherData(data[\"list\"]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <Stack spacing=\"2em\">\r\n        <Stack direction=\"row\" spacing=\".5em\" justifyContent=\"center\">\r\n          <CalendarMonthIcon fontSize=\"large\" style={{ color: \"#FFF\" }} />\r\n          <Typography variant=\"h4\" color=\"white\" fontWeight=\"bold\">\r\n            Weekly Forecast\r\n          </Typography>\r\n        </Stack>\r\n        <Box style={{ \"overflow-y\": \"auto\", height: \"60vh\" }}>\r\n          <Stack spacing=\"1em\" p=\"1em\">\r\n            {weeklyWeatherData\r\n              ? weeklyWeatherData.map((dayInfo) => (\r\n                  <Card>\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"center\"\r\n                      p=\"1em\"\r\n                      width=\"30vw\"\r\n                      height=\"8vh\"\r\n                    >\r\n                      <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                        {today.toDateString() !==\r\n                        new Date(dayInfo[\"dt\"] * 1000).toDateString()\r\n                          ? new Date(dayInfo[\"dt\"] * 1000).toLocaleDateString(\r\n                              \"en-us\",\r\n                              {\r\n                                weekday: \"short\",\r\n                              }\r\n                            )\r\n                          : \"Today\"}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                        {Math.round(dayInfo[\"temp\"][\"day\"])}&#176;\r\n                      </Typography>\r\n                      <Stack\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        <img\r\n                          src={`https://openweathermap.org/img/wn/${dayInfo[\"weather\"][0][\"icon\"]}@2x.png`}\r\n                        ></img>\r\n                        <Typography variant=\"h7\" fontWeight=\"bold\">\r\n                          {dayInfo[\"weather\"][0][\"main\"]}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Card>\r\n                ))\r\n              : null}\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\nexport default WeeklyForecast;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./components/LocationBar\";\r\nimport LocationBar from \"./components/LocationBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TodayInfo from \"./components/TodayInfo\";\r\nimport HourlyForecast from \"./components/HourlyForecast\";\r\nimport WeeklyForecast from \"./components/WeeklyForecast\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nfunction App() {\r\n  var dayColor = \"#FBAB7E\";\r\n  var dayColor2 = \"#F7CE68\";\r\n  var nightColor1 = \"#243949\";\r\n  var nightColor2 = \"#09203f\";\r\n  var backgroundColor = null;\r\n  var backgroundColor2 = null;\r\n\r\n  const [zipcode, setZipcode] = useState(\"01852\");\r\n  const handleZipcode = (e) => {\r\n    var newZip = e.target.value;\r\n    if (newZip.length === 5) {\r\n      setZipcode(e.target.value);\r\n      console.log(zipcode);\r\n    }\r\n  };\r\n\r\n  // Changing units b/w F & C\r\n  const [units, setUnits] = useState(\"imperial\");\r\n  const handleCelcius = (e) => {\r\n    setUnits(\"metric\");\r\n  };\r\n  const handleFahrenheit = (e) => {\r\n    setUnits(\"imperial\");\r\n  };\r\n\r\n  // Getting users location with geolocation\r\n  const [coords, setCoords] = useState(null);\r\n  const handleGettingUserLocation = (e) => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setZipcode(null); // set zipcode null so it wont go into the zipcode fetch when useEffect is triggered\r\n        setCoords(position.coords);\r\n      });\r\n    } else {\r\n      console.log(\"Unable to get geolocation.\");\r\n    }\r\n  };\r\n\r\n  if (Date.now().getHours >= 5 && Date.now().getHours <= 17) {\r\n    backgroundColor = dayColor;\r\n    backgroundColor2 = dayColor2;\r\n  } else {\r\n    backgroundColor = nightColor1;\r\n    backgroundColor2 = nightColor2;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      p={2}\r\n      sx={{\r\n        background: `linear-gradient(to right,${backgroundColor}, ${backgroundColor2})`,\r\n      }}\r\n      height=\"100vh\"\r\n    >\r\n      <LocationBar\r\n        handleZipcode={handleZipcode}\r\n        handleCelcius={handleCelcius}\r\n        handleFahrenheit={handleFahrenheit}\r\n        handleGettingUserLocation={handleGettingUserLocation}\r\n      />\r\n      <TodayInfo zipcode={zipcode} units={units} coords={coords} />\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"space-evenly\"\r\n        divider={<Divider orientation=\"vertical\" variant=\"middle\" flexItem />}\r\n      >\r\n        <HourlyForecast zipcode={zipcode} units={units} coords={coords} />\r\n        <WeeklyForecast zipcode={zipcode} units={units} coords={coords} />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n"],"sourceRoot":""}